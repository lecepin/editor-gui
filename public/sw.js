importScripts("./dexie.min.js");
importScripts("./constants.js");

const db = new Dexie(DB_CONFIG.NAME);

db.version(DB_CONFIG.VERSION).stores({
  documents: DB_CONFIG.STORES.DOCUMENTS,
  images: DB_CONFIG.STORES.IMAGES,
});

// 404 SVG 图片
const NOT_FOUND_SVG = `<svg t="1736082058926" class="icon" viewBox="0 0 2426 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" width="256" height="256"><path d="M2085.64082571 721.87954624v101.55414318c0 52.47062414-35.54395009 96.4774196-84.62845264 108.32540297 246.26928915 7.61705245 401.98662562 18.61825955 401.98662554 30.46624291 0 22.00339764-534.00799537 40.62165724-1193.2670841 40.62165741S16.46483051 985.07550939 16.46483051 962.2253353c0-14.38634521 228.49780578-27.08110481 571.24451441-34.69717384-41.46745006-16.07989784-71.08790031-56.70155508-71.08790029-104.09348852V721.87954624H323.66758895c-9.30962154 0-18.61825955-1.69256904-27.0811049-4.2309309-55.00898599-6.7712597-98.16998856-53.31641699-98.16998863-110.86474832V275.88612521c0-61.77827875 49.93127885-111.70955759 111.71054111-111.70955761s111.71054105 49.93127885 111.71054109 111.70955764V545.85138105h94.78386701V417.21613298c0-61.77926229 49.93127885-111.71054105 111.71054104-111.71054112 61.77827875 0 111.70955759 49.93127885 111.70955758 111.71054112V545.85138105h37.23651921c48.23870974 0 88.01457431 38.92908823 88.01457428 88.01457434s-38.92908823 88.01359081-88.01457428 88.01359085h-37.23651921v101.55414318c0 45.70034791-27.92788114 85.47522888-66.85696938 102.401903a34411.75814483 34411.75814483 0 0 1 537.39313347-4.23191434c275.04394658 0 528.93127167 3.38513806 730.34797257 8.46284526-45.70034791-14.38634521-78.70495276-56.70155508-78.70495284-106.6318504V721.87954624h-192.95385567c-9.30962154 0-18.61825955-1.69256904-27.08110483-4.2309309-55.00898599-6.7712597-98.16998856-53.31641699-98.16998861-110.86474832V275.88612521c0-61.77827875 49.93127885-111.70955759 111.71054104-111.70955761 61.77827875 0 111.70955759 49.93127885 111.70955758 111.70955764V545.85138105h94.78485049V417.21613298c0-61.77926229 49.93127885-111.71054105 111.70955766-111.71054112s111.71054105 49.93127885 111.710541 111.71054112V545.85138105h37.23651912c48.23870974 0 88.01359081 38.92908823 88.01359079 88.01457434s-38.92908823 88.01359081-88.01359079 88.01359085h-37.23651912z m-872.52377313 97.32321227c-130.32880064 0-236.96065106-105.78605765-236.960651-236.96065105s105.78605765-236.96065106 236.95966753-236.96065101 236.96163451 105.78605765 236.96163454 236.95966751-106.63185042 236.96163451-236.96065107 236.96163455z m0-114.24890284c66.85696938 0 121.86595539-54.16220974 121.8659554-121.86595531s-54.1631932-121.8649719-121.8659554-121.86497193-121.86595539 54.16220974-121.86595535 121.86497188 55.00898599 121.86595539 121.86595535 121.86595536z" fill="#ccc"></path><path d="M986.31181594 650.79164596H958.38295126c-7.61606901-28.77367388-10.15541428-59.24090033-7.61606904-90.55293622 12.69377621-144.71514586 140.48323149-252.19377254 286.04515367-239.49999635 7.61705245 0.84579276 12.69475963 7.61705245 12.69475963 14.38732865s-7.61705245 12.69377621-14.3873287 12.6937762c-130.32880064-11.00120716-244.57770358 84.62845269-256.42568689 214.95725333-4.23093089 30.46624293-0.84579276 60.08669322 7.61705246 88.01457439z m453.61047346 0c4.23191429-15.23410494 7.61705245-30.46624293 9.30962151-47.39291702 7.61606901-85.4742455-32.15979552-167.56531988-101.55414325-214.95725333-5.9244834-4.23093089-7.61705245-12.69377621-3.38612162-18.61727617 4.23191429-5.9244834 12.69475963-7.61705245 18.61825964-3.3861215 77.0123837 53.31641699 121.01917915 144.71514586 112.55633382 240.34578908-1.69158558 15.23410494-4.23093089 30.46722647-7.616069 44.85357168h-27.9278811z" fill="#ccc"></path></svg>`;

self.addEventListener("install", (event) => {
  event.waitUntil(self.skipWaiting());
});

self.addEventListener("activate", (event) => {
  event.waitUntil(clients.claim());
});

self.addEventListener("fetch", (event) => {
  const url = new URL(event.request.url);

  if (url.pathname.endsWith(".privateimg")) {
    event.respondWith(
      (async () => {
        const imageId = parseInt(
          url.pathname.split("/").pop()?.replace(".privateimg", "") || "0"
        );

        if (!imageId) {
          return new Response(NOT_FOUND_SVG, {
            status: 404,
            headers: {
              "Content-Type": "image/svg+xml",
            },
          });
        }

        try {
          const imageData = await db.table("images").get(imageId);

          if (!imageData) {
            return new Response(NOT_FOUND_SVG, {
              status: 404,
              headers: {
                "Content-Type": "image/svg+xml",
              },
            });
          }

          return new Response(imageData.binary, {
            headers: {
              "Content-Type": imageData.binary.type,
            },
          });
        } catch (error) {
          console.error("Error fetching image:", error);
          return new Response(NOT_FOUND_SVG, {
            status: 404,
            headers: {
              "Content-Type": "image/svg+xml",
            },
          });
        }
      })()
    );
  }
});
